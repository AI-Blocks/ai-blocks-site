{"version":3,"sources":["components/TitleComponent.js","components/SectionComponent.js","components/Dots.js","components/ProjectBox.js","App.js","serviceWorker.js","index.js"],"names":["TitleComponent","title","Helmet","SectionComponent","props","theme","spaceClass","noSpace","name","id","className","children","React","Component","roundedSquareWave","t","delta","a","f","Math","PI","atan","sin","Dots","ref","useRef","useMemo","vec","THREE","transform","positions","Array","map","_","i","position","x","y","floor","random","right","distances","pos","length","cos","angleTo","useFrame","clock","dist","elapsedTime","wave","copy","multiplyScalar","setPosition","current","setMatrixAt","instanceMatrix","needsUpdate","args","color","dotColor","DotsComponent","state","isDesktop","updatePredicate","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","orthographic","camera","zoom","colorManagement","resize","polyfill","ResizeObserver","ProjectBox","videoSrc","src","style","width","height","display","marginBottom","sizingMode","desc","defaultProps","App","bgColor","to","alt","smooth","duration","path","About","Home","Grid","container","spacing","item","xs","sm","textAlign","placeholder","form","type","Date","getFullYear","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7b6936be.chunk.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\n\nconst TitleComponent = ({ title }) => {\n    let defaultTitle = \"AI Blocks\";\n    return (\n        <Helmet>\n            <title>{title ? title : defaultTitle}</title>\n        </Helmet>\n    );\n};\n\nexport { TitleComponent };","import React from 'react';\nimport './SectionComponent.css';\nimport './../Colors.css'\nimport { Element } from 'react-scroll';\n\nfunction SectionComponent(props) {\n    const theme = props.theme ? props.theme: \"defaultSection\";\n    const spaceClass = props.noSpace ? \"noSpace\": \"defaultSection\";\n    return (\n        <Element name={props.id}>\n            <section className={theme + \" \" + spaceClass}>\n                <div className=\"wrapper\">\n                    <div className=\"content\">\n                        {props.children}\n                    </div>\n                </div>\n            </section>\n        </Element>\n    );\n}\n\nclass SectionComponentDiv extends React.Component {\n    bgComp;\n    bgArgs;\n    constructor(props, bgComp, bgArgs) {\n        super(props);\n        this.bgComp = bgComp;\n        this.bgArgs = bgArgs;\n        this.props = props;\n    }\n    render() {\n        return (\n            <section>\n                <this.bgComp {...this.bgArgs}/>\n                <div className=\"wrapper\">\n                    <div className=\"content\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </section>\n        )\n    };\n}\n\nexport { SectionComponent, SectionComponentDiv };","import React, { useMemo, useRef } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport * as THREE from 'three'\nimport { ResizeObserver } from '@juggle/resize-observer'\n\nconst roundedSquareWave = (t, delta, a, f) => {\n    return ((2 * a) / Math.PI) * Math.atan(Math.sin(1.5*Math.PI * t * f) / delta)\n};\n\nfunction Dots(props) {\n    const ref = useRef();\n    const { vec, transform, positions, distances } = useMemo(() => {\n        const vec = new THREE.Vector3();\n        const transform = new THREE.Matrix4();\n\n        // Precompute randomized initial positions\n        const positions = [...Array(10000)].map((_, i) => {\n            const position = new THREE.Vector3();\n            // Place in a grid\n            position.x = (i % 200) - 100;\n            position.y = Math.floor(i / 200) - 20;\n\n            // Offset every other column (hexagonal pattern)\n            position.y += (i % 2) * 0.5;\n\n            // Add some noise\n            position.x += Math.random() * 0.3;\n            position.y += Math.random() * 0.3;\n            return position\n        });\n\n        // Precompute initial distances with octagonal offset\n        const right = new THREE.Vector3(1, 0, 0);\n        const distances = positions.map((pos) => {\n            return pos.length() + Math.cos(pos.angleTo(right) * 8) * 0.5\n        });\n        return { vec, transform, positions, distances }\n    }, []);\n    useFrame(({ clock }) => {\n        for (let i = 0; i < 10000; ++i) {\n            const dist = distances[i];\n\n            // Distance affects the wave phase\n            const t = clock.elapsedTime - dist / 25;\n\n            // Oscillates between -0.4 and +0.4\n            const wave = roundedSquareWave(t, 0.15 + (0.2 * dist) / 72, 0.4, 1 / 3.8);\n\n            // Scale initial position by our oscillator\n            vec.copy(positions[i]).multiplyScalar(wave + 1.3);\n\n            // Apply the Vector3 to a Matrix4\n            transform.setPosition(vec);\n\n            // Update Matrix4 for this instance\n            ref.current.setMatrixAt(i, transform)\n        }\n        ref.current.instanceMatrix.needsUpdate = true\n    });\n    return (\n        <instancedMesh ref={ref} args={[null, null, 10000]}>\n            <circleBufferGeometry args={[0.15]} />\n            <meshBasicMaterial color={props.dotColor}/>\n        </instancedMesh>\n    )\n}\n\nexport class DotsComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.state = {\n            isDesktop: false //This is where I am having problems\n        };\n\n        this.updatePredicate = this.updatePredicate.bind(this);\n    }\n    componentDidMount() {\n        this.updatePredicate();\n        window.addEventListener(\"resize\", this.updatePredicate);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updatePredicate);\n    }\n\n    updatePredicate() {\n        this.setState({ isDesktop: window.innerWidth > 1500 });\n    }\n\n    render() {\n        const isDesktop = this.state.isDesktop;\n        return (\n            <Canvas\n                orthographic\n                camera={{zoom: isDesktop ? 25 : 10}}\n                colorManagement={false} // Disabling colorManagement gives us raw colors (pure whites)\n                resize={{polyfill: ResizeObserver}}\n            >\n\n                <Dots dotColor={this.props.dotColor}/>\n                {this.props.children}\n            </Canvas>\n        )\n    }\n}\n","import React from 'react';\nimport './../Colors.css'\nimport './ProjectBox.css';\nimport PropTypes from 'prop-types';\nimport HoverVideoPlayer from 'react-hover-video-player';\n\nexport class ProjectBox extends React.Component {\n    render() {\n        return(\n            <div className=\"boxContainer\">\n                <HoverVideoPlayer\n                    videoSrc={this.props.src}\n                    style={{\n                        width: '100%',\n                        height: '350px',\n                        display: 'block',\n                        marginBottom: '20px'\n                    }}\n                    sizingMode=\"container\"\n                />\n                <div className=\"boxDetails\">\n                    <h3>{this.props.name}</h3>\n                    {this.props.desc}\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectBox.propTypes = {\n    src: PropTypes.string,\n    name: PropTypes.string,\n    desc: PropTypes.string,\n    cats: PropTypes.array\n};\n\nProjectBox.defaultProps = {\n    name: \"Project\",\n    desc: \"Project description.\"\n};\n\n","import React from 'react';\nimport './Fonts.css'\nimport './Colors.css'\nimport './App.css';\nimport {TitleComponent} from \"./components/TitleComponent\";\nimport Grid from '@material-ui/core/Grid';\nimport {SectionComponent} from \"./components/SectionComponent\";\nimport {DotsComponent} from \"./components/Dots\";\nimport {ProjectBox} from \"./components/ProjectBox\";\nimport {\n    BrowserView,\n    MobileView,\n} from \"react-device-detect\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport { Link as ScrollLink } from 'react-scroll';\n\nexport default function App() {\n    return (\n        <Router>\n            <div id=\"animation\">\n                <DotsComponent bgColor={\"black\"} dotColor={\"white\"}/>\n            </div>\n            <SectionComponent id={\"nav\"} noSpace={true}>\n                <nav>\n                    <Link to=\"/\"><img src=\"/logo.svg\" alt=\"Home\"/></Link>\n                    <ul>\n                        <li><ScrollLink to=\"projects\" smooth={true} duration={500}>Projects</ScrollLink></li>\n                        {/*<li><Link to=\"/\">Delphi</Link></li>*/}\n                        <li><ScrollLink to=\"contact\" smooth={true} duration={500}>Contact</ScrollLink></li>\n                        {/*<li><Link to=\"/about\">About</Link></li>*/}\n                        {/*<li><Link to=\"/work\">Work</Link></li>*/}\n                        {/*<li><Link to=\"/projects\">Projects</Link></li>*/}\n                        {/*<li><Link to=\"/resume\">Resume</Link></li>*/}\n                        {/*<li><Link to=\"/contact\">Contact</Link></li>*/}\n                    </ul>\n                </nav>\n            </SectionComponent>\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n                <Route path=\"/about\">\n                    <About />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nfunction Home() {\n    return (\n        <div>\n            <SectionComponent id={\"head\"}>\n                <TitleComponent title={\"Home | AI Blocks\"}/>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <BrowserView><h1 className=\"bgHeader bgHeaderFancy\">WE FIND AI SOLUTIONS</h1></BrowserView>\n                        <MobileView><h1 className=\"bgHeader\">WE FIND AI SOLUTIONS</h1></MobileView>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                    </Grid>\n                    <Grid item xs={12} sm={8}>\n                        <h2 style={{textAlign: 'right'}}>To the most demanding applications.</h2>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Link to=\"/#projects\"><ScrollLink to=\"projects\" smooth={true} duration={500}>\n                            <h2 style={{textAlign: 'right'}}>See projects &rarr;</h2>\n                        </ScrollLink></Link>\n                    </Grid>\n                </Grid>\n            </SectionComponent>\n            <SectionComponent id={\"clients\"}>\n                <Grid container spacing={5}>\n                    <Grid item xs={12}>\n                        <h2 className={\"accent\"}>Selected Clients</h2>\n                    </Grid>\n                    <Grid className={\"centerGrid\"} item xs={12} sm={4}>\n                        <img src=\"/static/img/clients/mtr.png\" alt=\"MTR\"/>\n                    </Grid>\n                    <Grid className={\"centerGrid\"} item xs={12} sm={4}>\n                        <img src=\"/static/img/clients/hkpc.png\" alt=\"HKPC\"/>\n                    </Grid>\n                    <Grid className={\"centerGrid\"} item xs={12} sm={4}>\n                        <img src=\"/static/img/clients/customs.png\" alt=\"Customs\"/>\n                    </Grid>\n                </Grid>\n            </SectionComponent>\n            <SectionComponent id={\"projects\"} theme={\"grey\"}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={12}>\n                        <h2 className={\"accent\"}>Projects</h2>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <ProjectBox\n                            name=\"Deep Learning License Plate Reader\"\n                            desc={<p>Custom license plate reader <p className=\"accent\">specifically for Hong Kong\n                                license plates.</p> With support for deep learning license plate deskew, and multi-line\n                                license plates.</p>}\n                            src=\"/static/vid/plate.mp4\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <ProjectBox\n                            name=\"Train Station Safety Net\"\n                            desc={<p>Detect when passengers are on wheelchairs, using blind canes or have fallen over.\n                                The AI <p className=\"accent\">alerts station staff,</p> so that they can provide assistance.\n                                With AI, we can help make a <p className=\"accent\">safer journey for all.</p></p>}\n                            src=\"/static/vid/train_station.mp4\"\n                        />\n                    </Grid>\n                </Grid>\n            </SectionComponent>\n            <SectionComponent id={\"contact\"} theme={\"dark\"}>\n                <form id={\"contactForm\"}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={12}>\n                            <h2 className={\"white\"}>Contact Us</h2>\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <p className={\"white\"}>We'd love to hear about how we can help you with AI 🤖</p>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                                <input name=\"firstName\" placeholder=\"First name\" />\n                                <input name=\"lastName\" placeholder=\"Last name\" />\n                                <input name=\"email\" placeholder=\"Email\" />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <textarea name=\"comment\" form=\"contactForm\">Enter text here...</textarea>\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <input type=\"submit\" />\n                        </Grid>\n                    </Grid>\n                </form>\n            </SectionComponent>\n            <SectionComponent id={\"footer\"} theme={\"dark\"}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={12}>\n                            <p className={\"white\"}>&#169; {new Date().getFullYear()} AI Blocks Limited</p>\n                        </Grid>\n                    </Grid>\n            </SectionComponent>\n        </div>\n    );\n}\n\nfunction About() {\n    return (\n        <div>\n            <TitleComponent title={\"About | AI Blocks\"}/>\n            <h2>Dynamically loaded about!</h2>\n        </div>\n\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css'\nimport './index.css';\nimport './Fonts.css'\nimport './Colors.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}